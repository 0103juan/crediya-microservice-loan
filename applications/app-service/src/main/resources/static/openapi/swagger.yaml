openapi: 3.0.3
info:
  title: CrediYa - Microservicio de Préstamos
  description: API para registrar y gestionar solicitudes de préstamo en el sistema CrediYa.
  version: 1.0.0
  contact:
    name: Equipo de Desarrollo Crediya
    url: https://www.crediya.com/soporte
    email: dev-support@crediya.com
servers:
  - url: http://localhost:8080
    description: Servidor Local
  - url: https://api.dev.crediya.com/v1
    description: Servidor de entorno de desarrollo
tags:
  - name: Préstamos
    description: Operaciones relacionadas con la creación y gestión de solicitudes de préstamos.
paths:
  /api/v1/loans:
    post:
      summary: Registrar una nueva solicitud de préstamo
      description: Permite a un usuario autenticado con el rol 'CLIENTE' registrar una nueva solicitud de préstamo en el sistema. El correo del usuario se obtiene del token de autenticación.
      operationId: registerLoan
      tags:
        - Préstamos
      requestBody:
        description: Datos requeridos para crear la solicitud de préstamo.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterLoanRequest"
      responses:
        "201":
          description: Solicitud de préstamo registrada exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponseLoanResponse"
        "400":
          description: Error de validación en los datos de la solicitud. Ocurre si los datos enviados no cumplen con las restricciones definidas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                validationError:
                  summary: "Datos de solicitud inválidos"
                  value:
                    status: 400
                    code: "LOAN_VALIDATION_ERROR"
                    message: "Error de validación de la solicitud."
                    path: "/api/v1/loans"
                    errors:
                      amount: ["El monto del préstamo debe ser mayor que cero."]
                      term: ["El plazo máximo es de 60 meses."]
        "401":
          description: "No autorizado. Se requiere un token JWT válido y no expirado en la cabecera 'Authorization'."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidToken:
                  summary: "Token no proporcionado o inválido"
                  value:
                    status: 401
                    code: "UNAUTHORIZED"
                    message: "El token de acceso es inválido o ha expirado."
                    path: "/api/v1/loans"
        "403":
          description: "Acceso denegado. El usuario no tiene los permisos necesarios (rol 'CLIENTE') para realizar esta acción."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                insufficientPermissions:
                  summary: "Usuario sin permisos suficientes"
                  value:
                    status: 403
                    code: "FORBIDDEN"
                    message: "El usuario no tiene los permisos necesarios para solicitar un préstamo."
                    path: "/api/v1/loans"
        "404":
          description: "Recurso no encontrado. Puede ocurrir si el usuario autenticado no se encuentra en el sistema de autenticación o si el tipo de préstamo no existe."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                userNotFound:
                  summary: "Usuario no registrado"
                  value:
                    status: 404
                    code: "USER_NOT_FOUND"
                    message: "El usuario ejemplo@correo.com no está registrado."
                    path: "/api/v1/loans"
                invalidLoanType:
                  summary: "Tipo de préstamo no válido"
                  value:
                    status: 404
                    code: "INVALID_LOAN_TYPE"
                    message: "El tipo de préstamo con ID 99 no existe."
                    path: "/api/v1/loans"
        "500":
          description: Error interno del servidor. Ocurrió un error inesperado al procesar la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                unexpectedError:
                  summary: "Error interno del servidor"
                  value:
                    status: 500
                    code: "INTERNAL_SERVER_ERROR"
                    message: "Ocurrió un error inesperado en el servidor."
                    path: "/api/v1/loans"

components:
  schemas:
    RegisterLoanRequest:
      type: object
      required:
        - amount
        - term
        - loanType
      properties:
        amount:
          type: number
          format: double
          description: "Monto del préstamo solicitado. Debe ser mayor a 1.0 y menor o igual a 100,000,000."
          example: 50000.00
        term:
          type: integer
          description: "Plazo del préstamo en meses. Debe estar entre 1 y 60."
          example: 24
        loanType:
          type: integer
          description: "ID del tipo de préstamo."
          example: 1

    LoanResponse:
      type: object
      description: "Contiene los datos de la solicitud de préstamo creada."
      properties:
        userEmail:
          type: string
          format: email
          description: "Correo electrónico del solicitante."
          example: "juan.perez@example.com"
        userIdNumber:
          type: string
          description: "Número de documento de identidad del solicitante."
          example: "123456789"
        state:
          type: string
          description: "Estado inicial de la solicitud de préstamo."
          example: "REVIEW_PENDING"

    ApiResponseLoanResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          example: 201
        code:
          type: string
          example: "LOAN_REQUEST_SUCCESSFULLY"
        message:
          type: string
          example: "Solicitud de préstamo registrada exitosamente."
        path:
          type: string
          example: "/api/v1/loans/123456789"
        data:
          $ref: "#/components/schemas/LoanResponse"


    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: "Fecha y hora en que ocurrió el error."
        status:
          type: integer
          description: "Código de estado HTTP."
        code:
          type: string
          description: "Código de error personalizado de la aplicación."
        message:
          type: string
          description: "Mensaje detallado del error."
        path:
          type: string
          description: "La ruta del endpoint donde ocurrió el error."
        errors:
          type: object
          description: "Mapa con detalles específicos de los errores de validación (si aplica)."
          additionalProperties:
            type: array
            items:
              type: string
          example:
            amount: ["El monto del préstamo debe ser mayor que cero."]

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Se requiere un token JWT en el encabezado 'Authorization': 'Bearer {token}'"

security:
  - BearerAuth: []